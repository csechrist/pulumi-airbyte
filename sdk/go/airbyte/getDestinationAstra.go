// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package airbyte

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-airbyte/sdk/go/airbyte/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// DestinationAstra DataSource
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-airbyte/sdk/go/airbyte"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := airbyte.LookupDestinationAstra(ctx, &airbyte.LookupDestinationAstraArgs{
//				DestinationId: "...my_destination_id...",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupDestinationAstra(ctx *pulumi.Context, args *LookupDestinationAstraArgs, opts ...pulumi.InvokeOption) (*LookupDestinationAstraResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDestinationAstraResult
	err := ctx.Invoke("airbyte:index/getDestinationAstra:getDestinationAstra", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDestinationAstra.
type LookupDestinationAstraArgs struct {
	DestinationId string `pulumi:"destinationId"`
}

// A collection of values returned by getDestinationAstra.
type LookupDestinationAstraResult struct {
	// The values required to configure the destination. Parsed as JSON.
	Configuration   string `pulumi:"configuration"`
	DestinationId   string `pulumi:"destinationId"`
	DestinationType string `pulumi:"destinationType"`
	// The provider-assigned unique ID for this managed resource.
	Id          string `pulumi:"id"`
	Name        string `pulumi:"name"`
	WorkspaceId string `pulumi:"workspaceId"`
}

func LookupDestinationAstraOutput(ctx *pulumi.Context, args LookupDestinationAstraOutputArgs, opts ...pulumi.InvokeOption) LookupDestinationAstraResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDestinationAstraResult, error) {
			args := v.(LookupDestinationAstraArgs)
			r, err := LookupDestinationAstra(ctx, &args, opts...)
			var s LookupDestinationAstraResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDestinationAstraResultOutput)
}

// A collection of arguments for invoking getDestinationAstra.
type LookupDestinationAstraOutputArgs struct {
	DestinationId pulumi.StringInput `pulumi:"destinationId"`
}

func (LookupDestinationAstraOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDestinationAstraArgs)(nil)).Elem()
}

// A collection of values returned by getDestinationAstra.
type LookupDestinationAstraResultOutput struct{ *pulumi.OutputState }

func (LookupDestinationAstraResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDestinationAstraResult)(nil)).Elem()
}

func (o LookupDestinationAstraResultOutput) ToLookupDestinationAstraResultOutput() LookupDestinationAstraResultOutput {
	return o
}

func (o LookupDestinationAstraResultOutput) ToLookupDestinationAstraResultOutputWithContext(ctx context.Context) LookupDestinationAstraResultOutput {
	return o
}

// The values required to configure the destination. Parsed as JSON.
func (o LookupDestinationAstraResultOutput) Configuration() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDestinationAstraResult) string { return v.Configuration }).(pulumi.StringOutput)
}

func (o LookupDestinationAstraResultOutput) DestinationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDestinationAstraResult) string { return v.DestinationId }).(pulumi.StringOutput)
}

func (o LookupDestinationAstraResultOutput) DestinationType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDestinationAstraResult) string { return v.DestinationType }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupDestinationAstraResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDestinationAstraResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupDestinationAstraResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDestinationAstraResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupDestinationAstraResultOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDestinationAstraResult) string { return v.WorkspaceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDestinationAstraResultOutput{})
}
