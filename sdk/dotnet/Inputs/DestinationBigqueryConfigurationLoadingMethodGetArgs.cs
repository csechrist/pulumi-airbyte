// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Airbyte.Inputs
{

    public sealed class DestinationBigqueryConfigurationLoadingMethodGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// \n\n(recommended)\n\n Writes large batches of records to a file, uploads the file to GCS, then uses COPY INTO to load your data into BigQuery. Provides best-in-class speed, reliability and scalability. Read more about GCS Staging \n\nhere\n\n.
        /// </summary>
        [Input("gcsStaging")]
        public Input<Inputs.DestinationBigqueryConfigurationLoadingMethodGcsStagingGetArgs>? GcsStaging { get; set; }

        /// <summary>
        /// \n\n(not recommended)\n\n Direct loading using SQL INSERT statements. This method is extremely inefficient and provided only for quick testing. In all other cases, you should use GCS staging.
        /// </summary>
        [Input("standardInserts")]
        public Input<Inputs.DestinationBigqueryConfigurationLoadingMethodStandardInsertsGetArgs>? StandardInserts { get; set; }

        public DestinationBigqueryConfigurationLoadingMethodGetArgs()
        {
        }
        public static new DestinationBigqueryConfigurationLoadingMethodGetArgs Empty => new DestinationBigqueryConfigurationLoadingMethodGetArgs();
    }
}
