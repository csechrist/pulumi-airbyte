// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Airbyte.Inputs
{

    public sealed class SourceQuickbooksConfigurationCredentialsOAuth20GetArgs : global::Pulumi.ResourceArgs
    {
        [Input("accessToken", required: true)]
        private Input<string>? _accessToken;

        /// <summary>
        /// Access token fot making authenticated requests.
        /// </summary>
        public Input<string>? AccessToken
        {
            get => _accessToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _accessToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Identifies which app is making the request. Obtain this value from the Keys tab on the app profile via My Apps on the developer site. There are two versions of this key: development and production.
        /// </summary>
        [Input("clientId", required: true)]
        public Input<string> ClientId { get; set; } = null!;

        /// <summary>
        /// Obtain this value from the Keys tab on the app profile via My Apps on the developer site. There are two versions of this key: development and production.
        /// </summary>
        [Input("clientSecret", required: true)]
        public Input<string> ClientSecret { get; set; } = null!;

        /// <summary>
        /// Labeled Company ID. The Make API Calls panel is populated with the realm id and the current access token.
        /// </summary>
        [Input("realmId", required: true)]
        public Input<string> RealmId { get; set; } = null!;

        [Input("refreshToken", required: true)]
        private Input<string>? _refreshToken;

        /// <summary>
        /// A token used when refreshing the access token.
        /// </summary>
        public Input<string>? RefreshToken
        {
            get => _refreshToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _refreshToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("tokenExpiryDate", required: true)]
        private Input<string>? _tokenExpiryDate;

        /// <summary>
        /// The date-time when the access token should be refreshed.
        /// </summary>
        public Input<string>? TokenExpiryDate
        {
            get => _tokenExpiryDate;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _tokenExpiryDate = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        public SourceQuickbooksConfigurationCredentialsOAuth20GetArgs()
        {
        }
        public static new SourceQuickbooksConfigurationCredentialsOAuth20GetArgs Empty => new SourceQuickbooksConfigurationCredentialsOAuth20GetArgs();
    }
}
