// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Airbyte.Inputs
{

    public sealed class DestinationRedshiftConfigurationUploadingMethodGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// \n\n(recommended)\n\n Uploads data to S3 and then uses a COPY to insert the data into Redshift. COPY is recommended for production workloads for better speed and scalability. See \n\nAWS docs\n\n for more details.
        /// </summary>
        [Input("awss3Staging")]
        public Input<Inputs.DestinationRedshiftConfigurationUploadingMethodAwss3StagingGetArgs>? Awss3Staging { get; set; }

        /// <summary>
        /// \n\n(not recommended)\n\n Direct loading using SQL INSERT statements. This method is extremely inefficient and provided only for quick testing. In all other cases, you should use S3 uploading.
        /// </summary>
        [Input("standard")]
        public Input<Inputs.DestinationRedshiftConfigurationUploadingMethodStandardGetArgs>? Standard { get; set; }

        public DestinationRedshiftConfigurationUploadingMethodGetArgs()
        {
        }
        public static new DestinationRedshiftConfigurationUploadingMethodGetArgs Empty => new DestinationRedshiftConfigurationUploadingMethodGetArgs();
    }
}
