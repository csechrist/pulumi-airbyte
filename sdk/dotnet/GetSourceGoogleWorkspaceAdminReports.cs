// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Airbyte
{
    public static class GetSourceGoogleWorkspaceAdminReports
    {
        /// <summary>
        /// SourceGoogleWorkspaceAdminReports DataSource
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Airbyte = Pulumi.Airbyte;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var mySourceGoogleworkspaceadminreports = Airbyte.GetSourceGoogleWorkspaceAdminReports.Invoke(new()
        ///     {
        ///         SourceId = "...my_source_id...",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSourceGoogleWorkspaceAdminReportsResult> InvokeAsync(GetSourceGoogleWorkspaceAdminReportsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSourceGoogleWorkspaceAdminReportsResult>("airbyte:index/getSourceGoogleWorkspaceAdminReports:getSourceGoogleWorkspaceAdminReports", args ?? new GetSourceGoogleWorkspaceAdminReportsArgs(), options.WithDefaults());

        /// <summary>
        /// SourceGoogleWorkspaceAdminReports DataSource
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Airbyte = Pulumi.Airbyte;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var mySourceGoogleworkspaceadminreports = Airbyte.GetSourceGoogleWorkspaceAdminReports.Invoke(new()
        ///     {
        ///         SourceId = "...my_source_id...",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSourceGoogleWorkspaceAdminReportsResult> Invoke(GetSourceGoogleWorkspaceAdminReportsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSourceGoogleWorkspaceAdminReportsResult>("airbyte:index/getSourceGoogleWorkspaceAdminReports:getSourceGoogleWorkspaceAdminReports", args ?? new GetSourceGoogleWorkspaceAdminReportsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSourceGoogleWorkspaceAdminReportsArgs : global::Pulumi.InvokeArgs
    {
        [Input("sourceId", required: true)]
        public string SourceId { get; set; } = null!;

        public GetSourceGoogleWorkspaceAdminReportsArgs()
        {
        }
        public static new GetSourceGoogleWorkspaceAdminReportsArgs Empty => new GetSourceGoogleWorkspaceAdminReportsArgs();
    }

    public sealed class GetSourceGoogleWorkspaceAdminReportsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("sourceId", required: true)]
        public Input<string> SourceId { get; set; } = null!;

        public GetSourceGoogleWorkspaceAdminReportsInvokeArgs()
        {
        }
        public static new GetSourceGoogleWorkspaceAdminReportsInvokeArgs Empty => new GetSourceGoogleWorkspaceAdminReportsInvokeArgs();
    }


    [OutputType]
    public sealed class GetSourceGoogleWorkspaceAdminReportsResult
    {
        /// <summary>
        /// The values required to configure the source. Parsed as JSON.
        /// </summary>
        public readonly string Configuration;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly string SourceId;
        public readonly string SourceType;
        public readonly string WorkspaceId;

        [OutputConstructor]
        private GetSourceGoogleWorkspaceAdminReportsResult(
            string configuration,

            string id,

            string name,

            string sourceId,

            string sourceType,

            string workspaceId)
        {
            Configuration = configuration;
            Id = id;
            Name = name;
            SourceId = sourceId;
            SourceType = sourceType;
            WorkspaceId = workspaceId;
        }
    }
}
